//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NFine.Web.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.BlueearthWebServiceSoap")]
    public interface BlueearthWebServiceSoap {
        
        // CODEGEN: 消息 CreateTableRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NFine.Web.ServiceReference1.CreateTableResponse CreateTable(NFine.Web.ServiceReference1.CreateTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateTable", ReplyAction="*")]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.CreateTableResponse> CreateTableAsync(NFine.Web.ServiceReference1.CreateTableRequest request);
        
        // CODEGEN: 消息 GetAllProjectRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NFine.Web.ServiceReference1.GetAllProjectResponse GetAllProject(NFine.Web.ServiceReference1.GetAllProjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllProject", ReplyAction="*")]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.GetAllProjectResponse> GetAllProjectAsync(NFine.Web.ServiceReference1.GetAllProjectRequest request);
        
        // CODEGEN: 消息 ChangeProjectRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NFine.Web.ServiceReference1.ChangeProjectResponse ChangeProject(NFine.Web.ServiceReference1.ChangeProjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeProject", ReplyAction="*")]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.ChangeProjectResponse> ChangeProjectAsync(NFine.Web.ServiceReference1.ChangeProjectRequest request);
        
        // CODEGEN: 消息 UploadBIMRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadBIM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NFine.Web.ServiceReference1.UploadBIMResponse UploadBIM(NFine.Web.ServiceReference1.UploadBIMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadBIM", ReplyAction="*")]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.UploadBIMResponse> UploadBIMAsync(NFine.Web.ServiceReference1.UploadBIMRequest request);
        
        // CODEGEN: 消息 IsSuccessRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsSuccess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NFine.Web.ServiceReference1.IsSuccessResponse IsSuccess(NFine.Web.ServiceReference1.IsSuccessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsSuccess", ReplyAction="*")]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.IsSuccessResponse> IsSuccessAsync(NFine.Web.ServiceReference1.IsSuccessRequest request);
        
        // CODEGEN: 消息 PutInStorageConfigureRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PutInStorageConfigure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NFine.Web.ServiceReference1.PutInStorageConfigureResponse PutInStorageConfigure(NFine.Web.ServiceReference1.PutInStorageConfigureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PutInStorageConfigure", ReplyAction="*")]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.PutInStorageConfigureResponse> PutInStorageConfigureAsync(NFine.Web.ServiceReference1.PutInStorageConfigureRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MySoapHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private string passWordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("userName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string passWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
                this.RaisePropertyChanged("passWord");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateTableRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public NFine.Web.ServiceReference1.MySoapHeader MySoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ProjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ProjectName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ProjectSign;
        
        public CreateTableRequest() {
        }
        
        public CreateTableRequest(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string ProjectID, string ProjectName, string ProjectSign) {
            this.MySoapHeader = MySoapHeader;
            this.ProjectID = ProjectID;
            this.ProjectName = ProjectName;
            this.ProjectSign = ProjectSign;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CreateTableResult;
        
        public CreateTableResponse() {
        }
        
        public CreateTableResponse(string CreateTableResult) {
            this.CreateTableResult = CreateTableResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllProject", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public NFine.Web.ServiceReference1.MySoapHeader MySoapHeader;
        
        public GetAllProjectRequest() {
        }
        
        public GetAllProjectRequest(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader) {
            this.MySoapHeader = MySoapHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllProjectResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllProjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetAllProjectResult;
        
        public GetAllProjectResponse() {
        }
        
        public GetAllProjectResponse(string GetAllProjectResult) {
            this.GetAllProjectResult = GetAllProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeProject", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangeProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public NFine.Web.ServiceReference1.MySoapHeader MySoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ProjectID;
        
        public ChangeProjectRequest() {
        }
        
        public ChangeProjectRequest(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string ProjectID) {
            this.MySoapHeader = MySoapHeader;
            this.ProjectID = ProjectID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeProjectResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangeProjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ChangeProjectResult;
        
        public ChangeProjectResponse() {
        }
        
        public ChangeProjectResponse(string ChangeProjectResult) {
            this.ChangeProjectResult = ChangeProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadBIM", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadBIMRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public NFine.Web.ServiceReference1.MySoapHeader MySoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string fileUrl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fileExt;
        
        public UploadBIMRequest() {
        }
        
        public UploadBIMRequest(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string fileUrl, string fileName, string fileExt) {
            this.MySoapHeader = MySoapHeader;
            this.fileUrl = fileUrl;
            this.fileName = fileName;
            this.fileExt = fileExt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadBIMResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadBIMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadBIMResult;
        
        public UploadBIMResponse() {
        }
        
        public UploadBIMResponse(string UploadBIMResult) {
            this.UploadBIMResult = UploadBIMResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsSuccess", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class IsSuccessRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public NFine.Web.ServiceReference1.MySoapHeader MySoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileExt;
        
        public IsSuccessRequest() {
        }
        
        public IsSuccessRequest(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string fileName, string fileExt) {
            this.MySoapHeader = MySoapHeader;
            this.fileName = fileName;
            this.fileExt = fileExt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsSuccessResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class IsSuccessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string IsSuccessResult;
        
        public IsSuccessResponse() {
        }
        
        public IsSuccessResponse(string IsSuccessResult) {
            this.IsSuccessResult = IsSuccessResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PutInStorageConfigure", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PutInStorageConfigureRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public NFine.Web.ServiceReference1.MySoapHeader MySoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ProjectSign;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string BeeName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string x;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string y;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string z;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string VersionName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string TreeName;
        
        public PutInStorageConfigureRequest() {
        }
        
        public PutInStorageConfigureRequest(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string ProjectSign, string BeeName, string x, string y, string z, string VersionName, string TreeName) {
            this.MySoapHeader = MySoapHeader;
            this.ProjectSign = ProjectSign;
            this.BeeName = BeeName;
            this.x = x;
            this.y = y;
            this.z = z;
            this.VersionName = VersionName;
            this.TreeName = TreeName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PutInStorageConfigureResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PutInStorageConfigureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PutInStorageConfigureResult;
        
        public PutInStorageConfigureResponse() {
        }
        
        public PutInStorageConfigureResponse(string PutInStorageConfigureResult) {
            this.PutInStorageConfigureResult = PutInStorageConfigureResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BlueearthWebServiceSoapChannel : NFine.Web.ServiceReference1.BlueearthWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlueearthWebServiceSoapClient : System.ServiceModel.ClientBase<NFine.Web.ServiceReference1.BlueearthWebServiceSoap>, NFine.Web.ServiceReference1.BlueearthWebServiceSoap {
        
        public BlueearthWebServiceSoapClient() {
        }
        
        public BlueearthWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlueearthWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlueearthWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlueearthWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NFine.Web.ServiceReference1.CreateTableResponse NFine.Web.ServiceReference1.BlueearthWebServiceSoap.CreateTable(NFine.Web.ServiceReference1.CreateTableRequest request) {
            return base.Channel.CreateTable(request);
        }
        
        public string CreateTable(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string ProjectID, string ProjectName, string ProjectSign) {
            NFine.Web.ServiceReference1.CreateTableRequest inValue = new NFine.Web.ServiceReference1.CreateTableRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.ProjectID = ProjectID;
            inValue.ProjectName = ProjectName;
            inValue.ProjectSign = ProjectSign;
            NFine.Web.ServiceReference1.CreateTableResponse retVal = ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).CreateTable(inValue);
            return retVal.CreateTableResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.CreateTableResponse> NFine.Web.ServiceReference1.BlueearthWebServiceSoap.CreateTableAsync(NFine.Web.ServiceReference1.CreateTableRequest request) {
            return base.Channel.CreateTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<NFine.Web.ServiceReference1.CreateTableResponse> CreateTableAsync(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string ProjectID, string ProjectName, string ProjectSign) {
            NFine.Web.ServiceReference1.CreateTableRequest inValue = new NFine.Web.ServiceReference1.CreateTableRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.ProjectID = ProjectID;
            inValue.ProjectName = ProjectName;
            inValue.ProjectSign = ProjectSign;
            return ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).CreateTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NFine.Web.ServiceReference1.GetAllProjectResponse NFine.Web.ServiceReference1.BlueearthWebServiceSoap.GetAllProject(NFine.Web.ServiceReference1.GetAllProjectRequest request) {
            return base.Channel.GetAllProject(request);
        }
        
        public string GetAllProject(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader) {
            NFine.Web.ServiceReference1.GetAllProjectRequest inValue = new NFine.Web.ServiceReference1.GetAllProjectRequest();
            inValue.MySoapHeader = MySoapHeader;
            NFine.Web.ServiceReference1.GetAllProjectResponse retVal = ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).GetAllProject(inValue);
            return retVal.GetAllProjectResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.GetAllProjectResponse> NFine.Web.ServiceReference1.BlueearthWebServiceSoap.GetAllProjectAsync(NFine.Web.ServiceReference1.GetAllProjectRequest request) {
            return base.Channel.GetAllProjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<NFine.Web.ServiceReference1.GetAllProjectResponse> GetAllProjectAsync(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader) {
            NFine.Web.ServiceReference1.GetAllProjectRequest inValue = new NFine.Web.ServiceReference1.GetAllProjectRequest();
            inValue.MySoapHeader = MySoapHeader;
            return ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).GetAllProjectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NFine.Web.ServiceReference1.ChangeProjectResponse NFine.Web.ServiceReference1.BlueearthWebServiceSoap.ChangeProject(NFine.Web.ServiceReference1.ChangeProjectRequest request) {
            return base.Channel.ChangeProject(request);
        }
        
        public string ChangeProject(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string ProjectID) {
            NFine.Web.ServiceReference1.ChangeProjectRequest inValue = new NFine.Web.ServiceReference1.ChangeProjectRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.ProjectID = ProjectID;
            NFine.Web.ServiceReference1.ChangeProjectResponse retVal = ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).ChangeProject(inValue);
            return retVal.ChangeProjectResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.ChangeProjectResponse> NFine.Web.ServiceReference1.BlueearthWebServiceSoap.ChangeProjectAsync(NFine.Web.ServiceReference1.ChangeProjectRequest request) {
            return base.Channel.ChangeProjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<NFine.Web.ServiceReference1.ChangeProjectResponse> ChangeProjectAsync(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string ProjectID) {
            NFine.Web.ServiceReference1.ChangeProjectRequest inValue = new NFine.Web.ServiceReference1.ChangeProjectRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.ProjectID = ProjectID;
            return ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).ChangeProjectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NFine.Web.ServiceReference1.UploadBIMResponse NFine.Web.ServiceReference1.BlueearthWebServiceSoap.UploadBIM(NFine.Web.ServiceReference1.UploadBIMRequest request) {
            return base.Channel.UploadBIM(request);
        }
        
        public string UploadBIM(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string fileUrl, string fileName, string fileExt) {
            NFine.Web.ServiceReference1.UploadBIMRequest inValue = new NFine.Web.ServiceReference1.UploadBIMRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.fileUrl = fileUrl;
            inValue.fileName = fileName;
            inValue.fileExt = fileExt;
            NFine.Web.ServiceReference1.UploadBIMResponse retVal = ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).UploadBIM(inValue);
            return retVal.UploadBIMResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.UploadBIMResponse> NFine.Web.ServiceReference1.BlueearthWebServiceSoap.UploadBIMAsync(NFine.Web.ServiceReference1.UploadBIMRequest request) {
            return base.Channel.UploadBIMAsync(request);
        }
        
        public System.Threading.Tasks.Task<NFine.Web.ServiceReference1.UploadBIMResponse> UploadBIMAsync(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string fileUrl, string fileName, string fileExt) {
            NFine.Web.ServiceReference1.UploadBIMRequest inValue = new NFine.Web.ServiceReference1.UploadBIMRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.fileUrl = fileUrl;
            inValue.fileName = fileName;
            inValue.fileExt = fileExt;
            return ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).UploadBIMAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NFine.Web.ServiceReference1.IsSuccessResponse NFine.Web.ServiceReference1.BlueearthWebServiceSoap.IsSuccess(NFine.Web.ServiceReference1.IsSuccessRequest request) {
            return base.Channel.IsSuccess(request);
        }
        
        public string IsSuccess(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string fileName, string fileExt) {
            NFine.Web.ServiceReference1.IsSuccessRequest inValue = new NFine.Web.ServiceReference1.IsSuccessRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.fileName = fileName;
            inValue.fileExt = fileExt;
            NFine.Web.ServiceReference1.IsSuccessResponse retVal = ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).IsSuccess(inValue);
            return retVal.IsSuccessResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.IsSuccessResponse> NFine.Web.ServiceReference1.BlueearthWebServiceSoap.IsSuccessAsync(NFine.Web.ServiceReference1.IsSuccessRequest request) {
            return base.Channel.IsSuccessAsync(request);
        }
        
        public System.Threading.Tasks.Task<NFine.Web.ServiceReference1.IsSuccessResponse> IsSuccessAsync(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string fileName, string fileExt) {
            NFine.Web.ServiceReference1.IsSuccessRequest inValue = new NFine.Web.ServiceReference1.IsSuccessRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.fileName = fileName;
            inValue.fileExt = fileExt;
            return ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).IsSuccessAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NFine.Web.ServiceReference1.PutInStorageConfigureResponse NFine.Web.ServiceReference1.BlueearthWebServiceSoap.PutInStorageConfigure(NFine.Web.ServiceReference1.PutInStorageConfigureRequest request) {
            return base.Channel.PutInStorageConfigure(request);
        }
        
        public string PutInStorageConfigure(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string ProjectSign, string BeeName, string x, string y, string z, string VersionName, string TreeName) {
            NFine.Web.ServiceReference1.PutInStorageConfigureRequest inValue = new NFine.Web.ServiceReference1.PutInStorageConfigureRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.ProjectSign = ProjectSign;
            inValue.BeeName = BeeName;
            inValue.x = x;
            inValue.y = y;
            inValue.z = z;
            inValue.VersionName = VersionName;
            inValue.TreeName = TreeName;
            NFine.Web.ServiceReference1.PutInStorageConfigureResponse retVal = ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).PutInStorageConfigure(inValue);
            return retVal.PutInStorageConfigureResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NFine.Web.ServiceReference1.PutInStorageConfigureResponse> NFine.Web.ServiceReference1.BlueearthWebServiceSoap.PutInStorageConfigureAsync(NFine.Web.ServiceReference1.PutInStorageConfigureRequest request) {
            return base.Channel.PutInStorageConfigureAsync(request);
        }
        
        public System.Threading.Tasks.Task<NFine.Web.ServiceReference1.PutInStorageConfigureResponse> PutInStorageConfigureAsync(NFine.Web.ServiceReference1.MySoapHeader MySoapHeader, string ProjectSign, string BeeName, string x, string y, string z, string VersionName, string TreeName) {
            NFine.Web.ServiceReference1.PutInStorageConfigureRequest inValue = new NFine.Web.ServiceReference1.PutInStorageConfigureRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.ProjectSign = ProjectSign;
            inValue.BeeName = BeeName;
            inValue.x = x;
            inValue.y = y;
            inValue.z = z;
            inValue.VersionName = VersionName;
            inValue.TreeName = TreeName;
            return ((NFine.Web.ServiceReference1.BlueearthWebServiceSoap)(this)).PutInStorageConfigureAsync(inValue);
        }
    }
}
