<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ include file="$(SolutionDir)NFine.Data\Extensions\DbHelperSecurity.ttinclude"  #>

//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NFine.Domain.Entity.SystemSecurity;
using NFine.Domain.IRepository.SystemSecurity;
using NFine.Repository.SystemSecurity;
namespace NFine.Application.SystemSecurity
{    
<# foreach(string str in config.TableName.Split(new char[] { ','},StringSplitOptions.RemoveEmptyEntries)){#>

<# 
    var tableName=str.Replace("Sys_","")+"App";
    var entity=str.Replace("Sys_","")+"Entity";
    var repository=str.Replace("Sys_","")+"Repository";
 #>
    /// <summary>
    /// <#=tableName#>
    /// </summary>    
    public partial class <#=tableName#>
    {
        private I<#=repository#> service=new <#=repository#>();

        public List<<#=entity#>> GetList()
        {
            return service.IQueryable().ToList();
        }

        public <#=entity#> GetForm(string keyValue)
        {
            return service.FindEntity(keyValue);
        }

        public void Delete(<#=entity#> entity)
        {
            service.Delete(entity);
        }

        public void SubmitForm(<#=entity#> entity, string keyValue)
        {
            if (!string.IsNullOrEmpty(keyValue))
            {
                entity.Modify(keyValue);
                service.Update(entity);
            }
            else
            {
                entity.Create();
                service.Insert(entity);
            }
        }

    }
		<#}#> 
}